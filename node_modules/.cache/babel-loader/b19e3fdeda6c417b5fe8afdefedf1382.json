{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [$props.type === 'paragraph' ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($props.data, el => {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", null, _toDisplayString(el), 1\n    /* TEXT */\n    )]);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  )) : _createCommentVNode(\"v-if\", true), $props.type === 'ul' ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.data, el => {\n    return _openBlock(), _createElementBlock(\"li\", null, _toDisplayString(el), 1\n    /* TEXT */\n    );\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))])) : _createCommentVNode(\"v-if\", true)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;6DAEUA,gBAAI,iCADZC,oBAKMC,SALN,EAKM;IAAAC;EAAA,CALN,EAKMC,YAHSJ,WAGT,EAHGK,EAAU,IAAR;yBAFXJ,oBAKM,KALN,EAKM,IALN,EAKM,CADJK,oBAAe,GAAf,EAAe,IAAf,EAAeC,iBAATF,EAAS,CAAf,EAAQ;IAAA;IAAR,CACI,CALN;GAKM,CALN;;EAAA,wCAOUL,gBAAI,sBAAdC,oBAEK,IAFL,EAEKO,UAFL,EAEK,oBADHP,oBAAoCC,SAApC,EAAoC,IAApC,EAAoCE,YAAnBJ,WAAmB,EAAzBK,EAAU,IAAR;yBAAbJ,oBAAoC,IAApC,EAAoC,IAApC,EAAoCM,iBAAVF,EAAU,CAApC,EAA4B;IAAA;IAA5B;GAAoC,CAApC;;EAAA,CACG,EAFL","names":["$props","_createElementBlock","_Fragment","key","_renderList","el","_createElementVNode","_toDisplayString","_hoisted_1"],"sourceRoot":"","sources":["/Users/liza/Documents/uni/web-basics/lizzochek.github.io/lab7/src/components/Content.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"type === 'paragraph'\"\n    v-for=\"el in data\"\n  >\n    <p>{{ el }}</p>\n  </div>\n\n  <ul v-if=\"type === 'ul'\">\n    <li v-for=\"el in data\">{{ el }}</li>\n  </ul>\n</template>\n\n<script>\n  export default {\n    name: 'Content',\n    props: ['data', 'type'],\n  };\n</script>\n"]},"metadata":{},"sourceType":"module"}